buildscript {
    dependencies {
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
    id "com.moowork.node" version "1.3.1"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

def frontendDir = '../frontend'
group = 'com.mettyoung'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

processResources {
    from("$frontendDir/build") {
        into 'static'
    }
}

node {
    version = "10.5.0"
    nodeModulesDir = file(frontendDir)
    download = true
}

task installFrontend(type: NpmTask) {
    args = ['install']
}

task buildFrontend(type: NpmTask, dependsOn: installFrontend) {
    args = ['run', 'build']
}

tasks.build.dependsOn buildFrontend

docker {
    name "${bootJar.getBaseName()}:${version}"
    copySpec.from(tasks.bootJar.outputs).into("dependency")
    buildArgs(['JAR_FILE': "dependency/${bootJar.getArchiveName()}"])
}

task dockerArchive {
    doLast {
        exec {
            executable "docker"
            args "save", "-o", "build/docker/app.tar", "${bootJar.getBaseName()}"
        }
        exec {
            executable "cp"
            args "build/docker/app.tar", "../devops/roles/webapp/files/"
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok'
    implementation 'com.opencsv:opencsv:4.5'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
